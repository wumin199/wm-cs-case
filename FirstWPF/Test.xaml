<Window x:Class="FirstWPF.Test"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:FirstWPF"
        xmlns:views="clr-namespace:FirstWPF.Tutorial.DependencyPropertity"
        xmlns:re="clr-namespace:FirstWPF.Tutorial.RouteEvent"
        xmlns:core="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        ButtonBase.Click="RouteWindow_Click"
        Title="Test"
        Height="1000"
        Width="1500">

  <Window.Resources>


    <ControlTemplate x:Key = "ButtonTemplate" TargetType = "Button">

      <Grid>
        <Ellipse x:Name = "ButtonEllipse" Height = "100" Width = "150" >
          <Ellipse.Fill>
            <LinearGradientBrush StartPoint = "0,0.2" EndPoint = "0.2,1.4">
              <GradientStop Offset = "0" Color = "Red" />
              <GradientStop Offset = "1" Color = "Orange" />
            </LinearGradientBrush>
          </Ellipse.Fill>
        </Ellipse>
        <!--将自定义的这个ButtonTemplate的Content绑定到TargetType的Content上-->
        <ContentPresenter Content = "{TemplateBinding Content}" 
               HorizontalAlignment = "Center" VerticalAlignment = "Center" />
      </Grid>

      <ControlTemplate.Triggers>

        <Trigger Property = "IsMouseOver" Value = "True">
          <Setter TargetName = "ButtonEllipse" Property = "Fill" >
            <Setter.Value>
              <LinearGradientBrush StartPoint = "0,0.2" EndPoint = "0.2,1.4">
                <GradientStop Offset = "0" Color = "YellowGreen" />
                <GradientStop Offset = "1" Color = "Gold" />
              </LinearGradientBrush>
            </Setter.Value>
          </Setter>
        </Trigger>

        <Trigger Property = "IsPressed" Value = "True">
          <Setter Property = "RenderTransform">
            <Setter.Value>
              <ScaleTransform ScaleX = "0.8" ScaleY = "0.8" 
                        CenterX = "0" CenterY = "0"  />
            </Setter.Value>
          </Setter>
          <Setter Property = "RenderTransformOrigin" Value = "0.5,0.5" />
        </Trigger>

      </ControlTemplate.Triggers>

    </ControlTemplate>

    
    
    <!--DataTemplate也是用于定义控件的模板，但是DataTemplate是用于定义数据绑定的模板，用于将数据绑定到控件上。-->
    <DataTemplate DataType = "{x:Type local:Person}">

      <Grid>
        <Grid.RowDefinitions>
          <RowDefinition Height = "Auto" />
          <RowDefinition Height = "Auto" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
          <ColumnDefinition Width = "Auto" />
          <ColumnDefinition Width = "200" />
        </Grid.ColumnDefinitions>

        <Label Name = "nameLabel"  Content="Name: " Margin = "10"/>
        <TextBox Name = "nameText" Grid.Column = "1" Margin = "10" 
               Text = "{Binding Name}"/>
        <Label Name = "ageLabel" Content="Age: " Margin = "10" Grid.Row = "1"/>
        <TextBox Name = "ageText" Grid.Column = "1" Grid.Row = "1" Margin = "10" 
               Text = "{Binding Age}"/>
      </Grid>

    </DataTemplate>

    <Style x:Key = "myButtonStyle" TargetType = "Button">
      <Setter Property = "Height" Value = "30" />
      <Setter Property = "Width" Value = "80" />
      <Setter Property = "Foreground" Value = "Green" />
      <Setter Property = "FontSize" Value = "15" />
      <Setter Property = "Margin" Value = "10" />
    </Style>

    <ObjectDataProvider x:Key="myEnum"
                        MethodName="GetValues"
                        ObjectType="{x:Type core:Enum}">
      <!--相当于 Enum.GetValues(typeof(Party))-->

      <ObjectDataProvider.MethodParameters>
        <x:TypeExtension Type="local:Party"/>
      </ObjectDataProvider.MethodParameters>

    </ObjectDataProvider>
    

    <!--<SolidColorBrush x:Key = "brushResource" Color = "Blue" />-->


    <Style x:Key = "TriggerStyle" TargetType = "Button">
      <Setter Property = "Foreground" Value = "Blue" />
      <Style.Triggers>
        <Trigger Property = "IsMouseOver" Value = "True">
          <Setter Property = "Foreground" Value = "Green" />
        </Trigger>
      </Style.Triggers>
    </Style>

    
    
    
  </Window.Resources>

  <Window.CommandBindings>
    <CommandBinding Command="ApplicationCommands.New"
                    Executed="NewExecuted"
                    CanExecute="CanNew"/>
    <CommandBinding Command="ApplicationCommands.Open"
                    Executed="OpenExecuted"
                    CanExecute="CanOpen"/>
    <CommandBinding Command="ApplicationCommands.Save"
                    Executed="SaveExecuted"
                    CanExecute="CanSave"/>
  </Window.CommandBindings>


  <Grid>

    <StackPanel x:Name="stack"
                Background="AliceBlue">

      <!--<StackPanel.ContextMenu>
        <ContextMenu>
          <MenuItem Header = "New" Command = "ApplicationCommands.New" />
          <MenuItem Header = "Open" Command = "Open" />
          <MenuItem Header = "Save" Command = "Save" />
        </ContextMenu>
      </StackPanel.ContextMenu>-->

      <Menu>
        <MenuItem Header="File">
          <MenuItem Header="New"
                    Command="New"/>
          <MenuItem Header="Open"
                    Command="Open"/>
          <MenuItem Header="Save"
                    Command="Save"/>
        </MenuItem>
      </Menu>

    </StackPanel>

    <!--<Menu HorizontalAlignment = "Stretch" VerticalAlignment = "Top" Height="20" FontSize="14">

      <MenuItem Header = "File">
        <MenuItem Header = "New" HorizontalAlignment = "Left" Width = "140" 
               Click = "MenuItem_Click" />

        <MenuItem Header = "Open" HorizontalAlignment = "Left" Width = "140" 
               Click = "MenuItem_Click" />

        <Separator HorizontalAlignment = "Left" Width = "140" />

        <MenuItem Header = "Close" HorizontalAlignment = "Left" Width = "140" 
               Click = "MenuItem_Click"/>
      </MenuItem>

      <MenuItem Header = "Edit">
        <MenuItem Header = "Find" HorizontalAlignment = "Left" Width = "140" 
               Click = "MenuItem_Click1" />
        <MenuItem Header = "Advanced" HorizontalAlignment = "Left" Width = "140" 
               Click = "MenuItem_Click1" />
        <Separator HorizontalAlignment = "Left" Width = "140" />
        <MenuItem Header = "Settings" HorizontalAlignment = "Left" Width = "140" 
               Click = "MenuItem_Click1" />
      </MenuItem>

      <MenuItem Header = "View">
        <MenuItem Header = "About" HorizontalAlignment = "Left" Width = "140" 
               Click = "MenuItem_Click2" />
        <MenuItem Header = "Tutorial" HorizontalAlignment = "Left" Width = "140" 
               Click = "MenuItem_Click2" />
        <Separator HorizontalAlignment = "Left" Width = "140" />
        <MenuItem Header = "Register" HorizontalAlignment = "Left" Width = "140" 
               Click = "MenuItem_Click2"/>
      </MenuItem>

    </Menu>-->

    <TabControl Margin="5,30,5,5">
      <TabItem Header="临时测试">
        <Grid>
        </Grid>
      </TabItem>
      <TabItem Header="依赖属性"
               Height="19"
               VerticalAlignment="Bottom">
        <Grid RenderTransformOrigin="0.502,0.516">
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
          </Grid.RowDefinitions>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
          </Grid.ColumnDefinitions>


          <Label Content="IsMouseOver是默认支持的依赖属性"
                 Grid.Row="0"
                 Grid.Column="0"
                 Margin="10 10 10 10"/>
          <Button  Height="40"
                   Width="175"
                   Content="Dependency Property"
                   Grid.Row="0"
                   Grid.Column="1">
            <Button.Style>
              <Style TargetType="{x:Type Button}">
                <Style.Triggers>
                  <Trigger Property="IsMouseOver"
                           Value="True">
                    <Setter Property="Foreground"
                            Value="Red"/>
                  </Trigger>
                </Style.Triggers>
              </Style>
            </Button.Style>
          </Button>
          <views:NewTextBox SetText="SetText"
                            Margin="0,0,0,0"
                            Grid.Row="1"
                            Grid.Column="0"
                            Width="200"
                            Height="50"></views:NewTextBox>
        </Grid>
      </TabItem>

      <TabItem Header="路由事件">
        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
          </Grid.RowDefinitions>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
          </Grid.ColumnDefinitions>
          <StackPanel Grid.Column="0"
                      Grid.Row="0"
                      Margin="20,20,20,20"
                      ButtonBase.Click="RouteStatckPanel_Click">
            <StackPanel Margin="10">
              <TextBlock Name="txt1"
                         FontSize="18"
                         Margin="5"
                         Text="This is TextBlock1"/>
              <TextBlock Name="txt2"
                         FontSize="18"
                         Margin="5"
                         Text="This is TextBlock2"/>
              <TextBlock Name="txt3"
                         FontSize="18"
                         Margin="5"
                         Text="This is TextBlock3"/>
            </StackPanel>
            <Button Margin="10"
                    Content="Click me"
                    Width="80"
                    Click="RouteBtn_Click"/>
          </StackPanel>


          <re:MyCustomControl Grid.Column="1"
                              Grid.Row="0"
                              MyClick="MyCustomControl_MyClick"/>

        </Grid>
      </TabItem>

      <TabItem Header="基础控件1">
        <ScrollViewer VerticalScrollBarVisibility="Auto"
                      HorizontalScrollBarVisibility="Auto">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Button x:Name="basicBtn"
                    HorizontalAlignment="Left"
                    Content="Click Me"
                    Margin="10 10 10 10"
                    VerticalAlignment="Top"
                    Width="75"
                    Click="basicBtn_Click"
                    Grid.Row="0"
                    Grid.Column="0"/>

            <Calendar Margin="10"
                      SelectionMode="MultipleRange"
                      IsTodayHighlighted="True"
                      Grid.Column="1"
                      Grid.Row="0"
                      SelectedDatesChanged="Calendar_SelectedDatesChanged"
                      xmlns:sys="clr-namespace:System;assembly=mscorlib">

              <Calendar.BlackoutDates>
                <CalendarDateRange Start="1/2/2025"
                                   End="1/4/2025"/>
                <CalendarDateRange Start="1/9/2025"
                                   End="1/9/2025"/>
                <CalendarDateRange Start="1/16/2025"
                                   End="1/16/2025"/>
                <CalendarDateRange Start="1/23/2025"
                                   End="1/25/2025"/>
                <CalendarDateRange Start="1/30/2025"
                                   End="1/30/2025"/>
              </Calendar.BlackoutDates>

              <Calendar.SelectedDates>
                <sys:DateTime>1/5/2025</sys:DateTime>
                <sys:DateTime>1/12/2025</sys:DateTime>
                <sys:DateTime>1/14/2025</sys:DateTime>
                <sys:DateTime>1/13/2025</sys:DateTime>
                <sys:DateTime>1/15/2025</sys:DateTime>
                <sys:DateTime>1/27/2025</sys:DateTime>
                <sys:DateTime>4/2/2025</sys:DateTime>
              </Calendar.SelectedDates>

              <Calendar.Background>
                <LinearGradientBrush EndPoint="0.5,1"
                                     StartPoint="0.5,0">
                  <GradientStop Color="#FFE4EAF0"
                                Offset="0"/>
                  <GradientStop Color="#FFECF0F4"
                                Offset="0.16"/>
                  <GradientStop Color="#FFFCFCFD"
                                Offset="0.16"/>
                  <GradientStop Color="#FFD80320"
                                Offset="1"/>
                </LinearGradientBrush>
              </Calendar.Background>

            </Calendar>
            <Label x:Name="basicLbl"
                   Grid.Row="0"
                   Grid.Column="2"
                   Margin="5">选中日期</Label>

            <CheckBox x:Name="basicCb1"
                      Content="Two States"
                      HorizontalAlignment="Left"
                      Margin="10"
                      VerticalAlignment="Top"
                      Checked="HandleCheck"
                      Grid.Column="0"
                      Grid.Row="1"
                      Unchecked="HandleUnchecked"
                      Width="90"/>

            <CheckBox x:Name="basicCb2"
                      Content="Three States"
                      HorizontalAlignment="Left"
                      Margin="10 40 50 10"
                      VerticalAlignment="Top"
                      Width="90"
                      IsThreeState="True"
                      Indeterminate="HandleThirdState"
                      Grid.Column="0"
                      Grid.Row="1"
                      Checked="HandleCheck"
                      Unchecked="HandleUnchecked"/>

            <TextBox x:Name="basicTb1"
                     HorizontalAlignment="Left"
                     Height="20"
                     Margin="10"
                     TextWrapping="Wrap"
                     Grid.Column="1"
                     Grid.Row="1"
                     VerticalAlignment="Top"
                     Width="250"/>

            <TextBox x:Name="basicTb2"
                     HorizontalAlignment="Left"
                     Height="20"
                     Margin="10 40 50 10"
                     TextWrapping="Wrap"
                     Grid.Column="1"
                     Grid.Row="1"
                     VerticalAlignment="Top"
                     Width="250"/>

            <ComboBox x:Name="basicComb3"
                      HorizontalAlignment="Left"
                      Margin="10"
                      VerticalAlignment="Top"
                      Width="120"
                      Grid.Column="0"
                      Grid.Row="2"
                      SelectionChanged="Combo3_SelectionChanged">

              <ComboBoxItem Content="Item #1"/>
              <ComboBoxItem Content="Item #2"/>
              <ComboBoxItem Content="Item #3"/>
            </ComboBox>

            <ComboBox x:Name="basicComb4"
                      HorizontalAlignment="Left"
                      Margin="10 40 0 10"
                      VerticalAlignment="Top"
                      Width="120"
                      IsEditable="True"
                      Grid.Column="0"
                      Grid.Row="2"
                      SelectionChanged="Combo4_SelectionChanged">

              <ComboBoxItem Content="Item #1"/>
              <ComboBoxItem Content="Item #2"/>
              <ComboBoxItem Content="Item #3"/>
            </ComboBox>

            <TextBox x:Name="basicTb3"
                     HorizontalAlignment="Left"
                     Height="20"
                     Margin="10"
                     TextWrapping="Wrap"
                     VerticalAlignment="Top"
                     Grid.Column="1"
                     Grid.Row="2"
                     Width="200"/>

            <TextBox x:Name="basicTb4"
                     HorizontalAlignment="Left"
                     Height="20"
                     Margin="10 40 0 10"
                     TextWrapping="Wrap"
                     VerticalAlignment="Top"
                     Grid.Column="1"
                     Grid.Row="2"
                     Width="200"/>

            <TextBox x:Name="basicTb5"
                     HorizontalAlignment="Left"
                     Height="50"
                     Margin="0"
                     TextWrapping="Wrap"
                     Text="Hi, this is WPF tutorial"
                     Grid.Row="3"
                     Grid.Column="0"
                     VerticalAlignment="Top"
                     Width="150">

              <TextBox.ContextMenu>
                <ContextMenu>
                  <MenuItem Header="_Bold"
                            IsCheckable="True"
                            Checked="Bold_Checked"
                            Unchecked="Bold_Unchecked"/>
                  <MenuItem Header="_Italic"
                            IsCheckable="True"
                            Checked="Italic_Checked"
                            Unchecked="Italic_Unchecked"/>
                  <Separator/>
                  <MenuItem Header="Increase Font Size"
                            Click="IncreaseFont_Click"/>
                  <MenuItem Header="_Decrease Font Size"
                            Click="DecreaseFont_Click"/>
                </ContextMenu>
              </TextBox.ContextMenu>

            </TextBox>

          </Grid>
        </ScrollViewer>
      </TabItem>

      <TabItem Header="基础控件2">
        <ScrollViewer VerticalScrollBarVisibility="Auto"
                      HorizontalScrollBarVisibility="Auto">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <DataGrid Name="dataGrid"
                      AlternatingRowBackground="LightBlue"
                      AlternationCount="2"
                      AutoGenerateColumns="False"
                      Grid.Row="0"
                      Grid.Column="0">
              <DataGrid.Columns>
                <!--DataGridTextColumn内容修改的时候，是调用了SetName -->
                <!--{Binding Name} 可以认为是注册了事件回调到前端的显示栏，类似OnClick()，做刷新 -->
                <DataGridTextColumn Header="Name"
                                    Binding="{Binding Name}"/>
                <DataGridTextColumn Header="Title"
                                    Binding="{Binding Title}"/>
                <DataGridCheckBoxColumn Header="ReElected?"
                                        Binding="{Binding WasReElected}"/>
                <!--ItemsSource 用于提供下拉框的数据源-->
                <DataGridComboBoxColumn Header="Party"
                                        SelectedItemBinding="{Binding Affiliation}"
                                        ItemsSource="{Binding Source={StaticResource myEnum}}"/>
              </DataGrid.Columns>
            </DataGrid>

            <DatePicker HorizontalAlignment="Left"
                        Margin="10, 10, 0, 0"
                        VerticalAlignment="Top"
                        SelectedDateChanged="DatePicker_SelectedDateChanged"
                        Grid.Row="1"
                        Grid.Column="0"/>
            <TextBox x:Name="basicTb6"
                     Grid.Row="1"
                     Grid.Column="1"
                     Width="100"/>

            <Button Height="23"
                    Margin="10"
                    x:Name="btn_showmsg"
                    VerticalAlignment="Top"
                    Click="ShowMessageBox_Click"
                    Grid.Row="2"
                    Grid.Column="0">Show Messsage Box</Button>
            <TextBox Height="23"
                     HorizontalAlignment="Left"
                     Margin="10"
                     x:Name="basicTb7"
                     VerticalAlignment="Top"
                     Width="120"
                     Grid.Row="2"
                     Grid.Column="1"/>

            <ListView HorizontalAlignment="Left"
                      Height="Auto"
                      Margin="10,10,0,0"
                      VerticalAlignment="Top"
                      Width="Auto"
                      x:Name="MenList"
                      Grid.Row="3"
                      Grid.Column="0">

              <ListView.View>
                <GridView>
                  <GridViewColumn Header="Name"
                                  DisplayMemberBinding="{Binding Name}"
                                  Width="100"/>

                  <GridViewColumn Header="ID"
                                  DisplayMemberBinding="{Binding ID}"
                                  Width="100"/>

                  <GridViewColumn Header="Age"
                                  DisplayMemberBinding="{Binding Age}"
                                  Width="100"/>

                </GridView>
              </ListView.View>

            </ListView>

            <StackPanel Orientation="Horizontal"
                        Grid.Row="4"
                        Grid.ColumnSpan="3">
              <Image Source="/Images/1.PNG"
                     VerticalAlignment="Top"
                     Margin="5"
                     Width="300"/>
              <Image Source="/Images/2.PNG"
                     VerticalAlignment="Top"
                     Margin="5"
                     Opacity="0.5"
                     Width="200"/>
            </StackPanel>

            <StackPanel Grid.Row="5"
                        Grid.ColumnSpan="3">
              <Ellipse Height="200"
                       Width="200"
                       HorizontalAlignment="Left"
                       Margin="5">
                <Ellipse.Fill>
                  <ImageBrush ImageSource="/Images/3.PNG"/>
                </Ellipse.Fill>
              </Ellipse>
            </StackPanel>

          </Grid>
        </ScrollViewer>
      </TabItem>

      <TabItem Header="基础控件3">
        <ScrollViewer VerticalScrollBarVisibility="Auto"
                      HorizontalScrollBarVisibility="Auto">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Label Content="Label Example in WPF"
                   HorizontalAlignment="Left"
                   Margin="5,5,5,5"
                   VerticalAlignment="Top"
                   Height="100"
                   Width="400"
                   Background="#FFD6BEBE"
                   FontFamily="Snap ITC"
                   FontSize="36"
                   FontStyle="Italic"
                   FontWeight="Light"
                   Foreground="#FFBD6B6B"
                   Grid.Row="0"
                   Grid.Column="0"/>

            <ListBox x:Name="basicListBox1"
                     Margin="10"
                     Grid.Row="1"
                     Grid.Column="0"
                     SelectionMode="Single">
              <ListBoxItem Content="XAML Tutorials"/>
              <ListBoxItem Content="WPF Tutorials"/>
              <ListBoxItem Content="Silverlight Tutorials"/>
              <ListBoxItem Content="Windows 10 Tutorials"/>
              <ListBoxItem Content="iOS Tutorials"/>
            </ListBox>

            <TextBox Height="23"
                     x:Name="textBox1"
                     Width="200"
                     Margin="10"
                     Grid.Row="1"
                     Grid.Column="1"
                     HorizontalAlignment="Left"
                     VerticalAlignment="Top"
                     Text="{Binding SelectedItem.Content, ElementName=basicListBox1}"/>

            <CheckBox Name="PCheckBox"
                      Margin="10"
                      Content="Checked Me"
                      Grid.Row="2"
                      Grid.Column="0"/>
            <Popup IsOpen="{Binding ElementName = PCheckBox,Path = IsChecked}"
                   PlacementTarget="{Binding ElementName = PCheckBox}"
                   AllowsTransparency="True"
                   PopupAnimation="Slide">

              <Canvas Width="125"
                      Height="100"
                      Background="LightGray">
                <Canvas.RenderTransform>
                  <RotateTransform x:Name="theTransform"
                                   CenterX="0"
                                   CenterY="0"
                                   Angle="0"/>
                </Canvas.RenderTransform>
                <TextBlock TextWrapping="Wrap"
                           Foreground="Blue"
                           Text="Hi, this is Popup"/>
              </Canvas>

            </Popup>

            <StackPanel x:Name="LayoutRoot"
                        Margin="20"
                        Grid.Row="3"
                        Grid.Column="0">

              <Border BorderThickness="5"
                      BorderBrush="Green">
                <StackPanel Background="White">
                  <TextBlock HorizontalAlignment="Center"
                             Margin="10"
                             Text="Value-Based Progress Bar"/>
                  <ProgressBar x:Name="pg1"
                               Value="100"
                               Margin="10"
                               Maximum="200"
                               Height="15"
                               IsIndeterminate="False"/>
                </StackPanel>
              </Border>

              <Border BorderThickness="5"
                      BorderBrush="Green">
                <StackPanel Background="White">
                  <TextBlock HorizontalAlignment="Center"
                             Margin="10"
                             Text="Indeterminate Progress Bar"/>
                  <ProgressBar x:Name="pg2"
                               Margin="10"
                               Height="15"
                               IsIndeterminate="True"/>
                </StackPanel>
              </Border>

            </StackPanel>

            <StackPanel Grid.Row="4"
                        Grid.Column="0"
                        Orientation="Horizontal">

              <TextBlock  HorizontalAlignment="Left"
                          Margin="10"
                          TextWrapping="Wrap"
                          Text="Gender:"
                          VerticalAlignment="Top"/>
              <RadioButton x:Name="rb1"
                           Content="Male"
                           HorizontalAlignment="Left"
                           Margin="10"
                           VerticalAlignment="Top"
                           GroupName="Gender"
                           Checked="HandleGender"/>

              <RadioButton x:Name="rb2"
                           Content="Female"
                           HorizontalAlignment="Left"
                           Margin="10"
                           VerticalAlignment="Top"
                           GroupName="Gender"
                           Checked="HandleGender"/>
              <TextBlock x:Name="textBlock2"
                         HorizontalAlignment="Left"
                         Margin="10"
                         TextWrapping="Wrap"
                         VerticalAlignment="Top"
                         Width="Auto"/>
            </StackPanel>

            <StackPanel Grid.Row="5"
                        Grid.Column="0"
                        Orientation="Horizontal">
              <TextBlock HorizontalAlignment="Left"
                         Margin="10"
                         TextWrapping="Wrap"
                         Text="Marital Status:"
                         VerticalAlignment="Top"/>

              <RadioButton x:Name="rb3"
                           Content="Single"
                           HorizontalAlignment="Left"
                           Margin="10"
                           VerticalAlignment="Top"
                           GroupName="Status"
                           Checked="HandleStatus"/>

              <RadioButton x:Name="radioButton"
                           Content="Engaged"
                           HorizontalAlignment="Left"
                           Margin="10"
                           VerticalAlignment="Top"
                           GroupName="Status"
                           Checked="HandleStatus"/>
              <RadioButton x:Name="radioButton1"
                           Content="Married"
                           GroupName="Status"
                           HorizontalAlignment="Left"
                           Margin="10"
                           VerticalAlignment="Top"
                           Checked="HandleStatus"/>
              <TextBlock x:Name="textBlock3"
                         HorizontalAlignment="Left"
                         Margin="10"
                         TextWrapping="Wrap"
                         VerticalAlignment="Top"
                         Width="Auto"/>
            </StackPanel>



            <StackPanel  Grid.Row="6"
                         Grid.Column="0">
              <!-- A large TextBlock. -->
              <TextBlock Width="300"
                         TextWrapping="Wrap"
                         Margin="10"
                         Text="Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed ac mi ipsum. 
            Phasellus vel malesuada mauris. Donec pharetra, enim sit amet mattis tincidunt, felis 
            nisi semper lectus, vel porta diam nisi in augue. Pellentesque lacus tortor, aliquam et 
            faucibus id, rhoncus ut justo. Sed id lectus odio, eget pulvinar diam. Suspendisse 
            eleifend ornare libero, in luctus purus aliquet non. Sed interdum, sem vitae rutrum 
            rhoncus, felis ligula ultrices sem, in eleifend eros ante id neque."/>

              <!-- The same large TextBlock, wrapped in a ScrollViewer. -->

              <ScrollViewer Height="200"
                            Width="200"
                            HorizontalScrollBarVisibility="Auto"
                            VerticalScrollBarVisibility="Auto">

                <TextBlock Width="300"
                           TextWrapping="Wrap"
                           Text=" This license governs use of code marked as sample or example available 
               on this web site without a license agreement, as provided under the section above 
               titled NOTICE SPECIFIC TO SOFTWARE AVAILABLE ON THIS WEB SITE. If you use such 
               code (the software), you accept this license. If you do not accept the license, 
               do not use the software.Lorem ipsum dolor sit amet, consectetur adipiscing elit. 
               Sed ac mi ipsum. Phasellus vel malesuada mauris. Donec pharetra, enim sit amet 
               mattis tincidunt, felis nisi semper lectus, vel porta diam nisi in augue. 
               Pellentesque lacus tortor, aliquam et faucibus id, rhoncus ut justo. Sed id 
               lectus odio, eget pulvinar diam. Suspendisse eleifend ornare libero, in luctus 
               purus aliquet non. Sed interdum, sem vitae rutrum rhoncus, felis ligula ultrices 
               sem, in eleifend eros ante id neque."/>

              </ScrollViewer>

            </StackPanel>

          </Grid>
        </ScrollViewer>
      </TabItem>

      <TabItem Header="基础控件4">
        <ScrollViewer VerticalScrollBarVisibility="Auto"
                      HorizontalScrollBarVisibility="Auto">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <StackPanel Grid.Row="0"
                        Grid.Column="0">
              <TextBlock Text="Slider"
                         Margin="10"/>

              <Slider x:Name="basicSlider1"
                      Minimum="0"
                      Maximum="100"
                      TickFrequency="2"
                      Width="500"
                      TickPlacement="BottomRight"
                      ValueChanged="basicSlider1Changed"
                      Margin="10">
                <Slider.Background>
                  <LinearGradientBrush EndPoint="0.5,1"
                                       StartPoint="0.5,0">
                    <GradientStop Color="Black"
                                  Offset="0"/>
                    <GradientStop Color="#FFF5DCDC"
                                  Offset="1"/>
                  </LinearGradientBrush>
                </Slider.Background>
              </Slider>

              <TextBlock x:Name="basicTblk"
                         Margin="10"
                         Text="Current value: 0"/>
            </StackPanel>

            <TextBlock FontFamily="Verdana"
                       Grid.Row="1"
                       Grid.Column="0"
                       LineStackingStrategy="MaxHeight"
                       LineHeight="10"
                       Width="500"
                       TextWrapping="Wrap"
                       Background="#FFE2B1B1"
                       Margin="48,8,48,10">
			
         Use the <Run FontSize="30">LineStackingStrategy</Run> property to determine how
            a line box is created for each line. A value of <Run FontSize="20">MaxHeight</Run> 
            specifies that the stack height is the smallest value that contains all the inline 
            elements on that line when those elements are properly aligned. A value of <Run
                FontSize="20"> BlockLineHeight</Run> specifies that the stack height is 
            determined by the block element LineHeight property value.
            </TextBlock>

            <StackPanel Grid.Row="2"
                        Grid.Column="0">
              <ToggleButton x:Name="tb"
                            Content="Toggle"
                            Checked="HandleCheckTbn"
                            Unchecked="HandleUncheckBtn"
                            Margin="10"
                            Width="108"
                            HorizontalAlignment="Center"/>
              <TextBlock x:Name="basicTbl8"
                         Margin="10"
                         Width="300"
                         HorizontalAlignment="Center"
                         FontSize="24"
                         Background="#FFFDE0E0"/>
            </StackPanel>


            <Grid Grid.Row="3"
                  Grid.Column="0">
              <TextBlock x:Name="basicTbl9"
                         HorizontalAlignment="Left"
                         Margin="10"
                         TextWrapping="Wrap"
                         Text="User Name"
                         VerticalAlignment="Top"/>

              <TextBlock x:Name="basicTbl10"
                         HorizontalAlignment="Left"
                         Margin="10 50 10 10"
                         TextWrapping="Wrap"
                         Text="Password"
                         VerticalAlignment="Top"/>

              <TextBox x:Name="basicTbl11"
                       HorizontalAlignment="Left"
                       Height="24"
                       Margin="136,10,0,0"
                       TextWrapping="Wrap"
                       VerticalAlignment="Top"
                       Width="219"
                       ToolTipService.ToolTip="Enter User Name"/>

              <PasswordBox x:Name="passwordBox"
                           HorizontalAlignment="Left"
                           Margin="136,46,0,0"
                           VerticalAlignment="Top"
                           Width="219"
                           Height="24"
                           ToolTipService.ToolTip="Enter Password"/>

              <Button x:Name="button"
                      Content="Log in"
                      HorizontalAlignment="Left"
                      Margin="136,80,0,10"
                      VerticalAlignment="Top"
                      Width="75"
                      ToolTipService.ToolTip="Log in"/>
            </Grid>
            <DockPanel LastChildFill="True"
                       Grid.Row="4"
                       Grid.Column="0">
              <Button Content="Top"
                      DockPanel.Dock="Top"
                      Click="DockerPanel_Click"/>
              <Button Content="Bottom"
                      DockPanel.Dock="Bottom"
                      Click="DockerPanel_Click"/>
              <Button Content="Left"
                      Click="DockerPanel_Click"/>
              <Button Content="Right"
                      DockPanel.Dock="Right"
                      Click="DockerPanel_Click"/>
              <Button Content="Center"
                      Click="DockerPanel_Click"/>
            </DockPanel>
            <StackPanel Grid.Row="5"
                        Grid.Column="0">
              <Rectangle x:Name="mrRec"
                         Fill="AliceBlue"
                         MouseEnter="OnMouseEnter"
                         MouseLeave="OnMouseLeave"
                         MouseMove="OnMouseMove"
                         MouseDown="OnMouseDown"
                         Height="100"
                         Margin="20">
              </Rectangle>

              <TextBlock x:Name="basicTbl12"
                         Height="31"
                         HorizontalAlignment="Left"
                         Width="250"
                         Margin="10"/>
              <TextBlock x:Name="basicTbl13"
                         Height="31"
                         HorizontalAlignment="Left"
                         Width="250"
                         Margin="10"/>
              <TextBlock x:Name="basicTbl14"
                         Height="31"
                         HorizontalAlignment="Left"
                         Width="250"
                         Margin="10"/>

            </StackPanel>

            <StackPanel Orientation="Horizontal"
                        KeyDown="OnStackPanelKeyDown"
                        Grid.Row="6"
                        Grid.Column="0">
              <TextBox Width="400"
                       Height="30"
                       Margin="10"/>
              <Button Click="OnInputBtnClick"
                      Content="Open"
                      Margin="10"
                      Width="50"
                      Height="30"/>
            </StackPanel>

          </Grid>
        </ScrollViewer>



      </TabItem>

      <TabItem Header="基础控件5">
        <ScrollViewer VerticalScrollBarVisibility="Auto"
                      HorizontalScrollBarVisibility="Auto">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="200"/>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <TextBox x:Name="basicTb8"
                     Grid.Row="0"
                     Grid.Column="0"
                     HorizontalAlignment="Left"
                     Height="180"
                     Margin="10"
                     TextWrapping="Wrap"
                     VerticalAlignment="Top"
                     Width="300"/>

            <Label Margin = "2" Grid.Row="1" Grid.Column="0" >_Name:</Label>


            <!--person是属性<get/set>，而不是字段-->
            <!--这里表示绑定到this.DataContext(==this)的person属性的Name属性-->
            <TextBox Name = "nameText" Grid.Row="1" Grid.Column="1" Margin = "10" 
                    Text = "{Binding person.Name, Mode=TwoWay}"/>

            <Label Margin = "2" Grid.Row = "2" Grid.Column="0">_Age:</Label>

            <TextBox Name = "ageText" Grid.Column = "1" Grid.Row = "2" Margin = "10" 
                    Text = "{Binding person.Age, Mode = TwoWay}"/>

            <StackPanel Grid.Row = "3" Grid.Column="0" Grid.ColumnSpan = "2">
              <Button Content = "_Show..." Click="showBtn_Click" />
            </StackPanel>

            <StackPanel Grid.Row="4" Grid.Column="0">
              <Rectangle Height = "50" Margin = "10" Fill = "{StaticResource brushResource}" />
              <Rectangle Height = "50" Margin = "10" Fill = "{DynamicResource brushResource}" />
              <Button x:Name = "changeResourceButton"
                      Content = "_Change Resource" Click = "changeResourceButton_Click" />
            </StackPanel>

            <StackPanel Grid.Row="5" Grid.Column="0">
              <!--可以测试自定义按钮的大小-->
              <Button Content = "Round Button!"
                       Template = "{StaticResource ButtonTemplate}" 
                       Width = "100" Margin = "5" /> 
              <Button Content = "Default Button!" Height = "40" 
                       Width = "150" Margin = "5" />
              </StackPanel>
            
            
            <!--自定义data binding-->
            <ListBox ItemsSource = "{Binding People}"  Grid.Row="6" Grid.Column="0"/>

          </Grid>
        </ScrollViewer>
      </TabItem>

      <TabItem Header="基础控件6">
        <ScrollViewer VerticalScrollBarVisibility="Auto"
                      HorizontalScrollBarVisibility="Auto">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <StackPanel Grid.Row="0" Grid.Column="0">
              <Button Content = "Button1" Style = "{StaticResource myButtonStyle}" />
              <Button Content = "Button2" Style = "{StaticResource myButtonStyle}" />
              <Button Content = "Button3" Style="{StaticResource myButtonStyle}" />
            </StackPanel>

            <StackPanel Margin = "10" VerticalAlignment = "Top" Grid.Row="1" Grid.Column="0">

              <TextBlock Text = "TextBlock">
                <TextBlock.Style>
                  <Style>
                    <Setter Property = "TextBlock.FontSize" Value = "24" />
                    <Setter Property = "TextBlock.Width" Value = "400" />
                    <Setter Property = "TextBlock.Height" Value = "40" />
                    <Setter Property = "TextBlock.Background" Value = "Gray" />
                    <Setter Property = "TextBlock.Margin" Value = "10" />
                  </Style>
                </TextBlock.Style>
              </TextBlock>

              <Button Content = "Button">
                <Button.Style>
                  <Style>
                    <Setter Property = "TextBlock.Width" Value = "100" />
                    <Setter Property = "TextBlock.Height" Value = "40" />
                    <Setter Property = "TextBlock.Margin" Value = "10" />
                  </Style>
                </Button.Style>
              </Button>

            </StackPanel>

            <StackPanel Margin = "10" Grid.Row="2" Grid.Column="0">
              <StackPanel.Resources>
                <Style TargetType = "Button">
                  <Setter Property = "Foreground" Value = "Blue" />
                  <Setter Property = "FontStyle" Value = "Italic" />
                  <Setter Property = "Width" Value = "100" />
                  <Setter Property = "Height" Value = "40" />
                  <Setter Property = "Margin" Value = "10" />
                </Style>
              </StackPanel.Resources>

              <Button>Button 1</Button>
              <Button>Button 2</Button>
              <Button Foreground = "red">Button 3</Button>
            </StackPanel>


            <Button Width = "100" Height = "70" Grid.Row="3" Grid.Column="0" Margin="10"
                     Style = "{StaticResource TriggerStyle}" Content = "Trigger"/>

            <StackPanel HorizontalAlignment = "Center" Grid.Row="3" Grid.Column="1">
              <CheckBox x:Name = "redColorCheckBox" 
                    Content = "Set red as foreground color" Margin = "20"/>

              <TextBlock VerticalAlignment = "Center" 
                  Text = "Event Trigger" FontSize = "24" Margin = "20">
                <TextBlock.Style>
                  <Style>
                    <Style.Triggers>
                      <DataTrigger Binding = "{Binding ElementName = redColorCheckBox, Path = IsChecked}" 
                                  Value = "true">
                        <Setter Property = "TextBlock.Foreground" Value = "Red"/>
                        <Setter Property = "TextBlock.Cursor" Value = "Hand" />
                      </DataTrigger>
                    </Style.Triggers>
                  </Style>
                </TextBlock.Style>
              </TextBlock>

            </StackPanel>

            <Button Content = "Click Me" Width = "60" Height = "30"  Grid.Row="3" Grid.Column="2">

              <Button.Triggers>
                <EventTrigger RoutedEvent = "Button.Click">
                  <EventTrigger.Actions>
                    <BeginStoryboard>
                      <Storyboard>

                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty = 
                           "Width" Duration = "0:0:4">
                          <LinearDoubleKeyFrame Value = "60" KeyTime = "0:0:0"/>
                          <LinearDoubleKeyFrame Value = "120" KeyTime = "0:0:1"/>
                          <LinearDoubleKeyFrame Value = "200" KeyTime = "0:0:2"/>
                          <LinearDoubleKeyFrame Value = "300" KeyTime = "0:0:3"/>
                        </DoubleAnimationUsingKeyFrames>

                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty = "Height" 
                           Duration = "0:0:4">
                          <LinearDoubleKeyFrame Value = "30" KeyTime = "0:0:0"/>
                          <LinearDoubleKeyFrame Value = "40" KeyTime = "0:0:1"/>
                          <LinearDoubleKeyFrame Value = "80" KeyTime = "0:0:2"/>
                          <LinearDoubleKeyFrame Value = "150" KeyTime = "0:0:3"/>
                        </DoubleAnimationUsingKeyFrames>

                      </Storyboard>
                    </BeginStoryboard>
                  </EventTrigger.Actions>
                </EventTrigger>
              </Button.Triggers>

            </Button>

            <local:MyUserControl Grid.Row="4" Grid.Column="0" />
          </Grid>
        </ScrollViewer>
      </TabItem>



    </TabControl>

  </Grid>
</Window>
